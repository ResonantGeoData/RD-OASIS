# Generated by Django 3.2.5 on 2021-07-05 16:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import s3_file_field.fields

import rdoasis.algorithms.models.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Algorithm',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                (
                    'data',
                    s3_file_field.fields.S3FileField(
                        validators=[
                            rdoasis.algorithms.models.validators.MimetypeValidator(
                                ['application/x-tar']
                            )
                        ]
                    ),
                ),
                ('docker_image_id', models.TextField(blank=True, null=True)),
                ('docker_attrs', models.TextField(blank=True, null=True)),
                ('docker_validation_failure', models.TextField(blank=True, null=True)),
                (
                    'creator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='AlgorithmJob',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('internal_failure', 'Internal failure'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='queued',
                        max_length=20,
                    ),
                ),
                ('fail_reason', models.TextField(blank=True, null=True)),
                (
                    'algorithm',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to='algorithms.algorithm'
                    ),
                ),
                (
                    'creator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='AlgorithmResult',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('data', s3_file_field.fields.S3FileField()),
                ('log', s3_file_field.fields.S3FileField(blank=True, null=True)),
                ('data_mimetype', models.TextField(blank=True, null=True)),
                (
                    'algorithm_job',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='algorithms.algorithmjob',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('data', s3_file_field.fields.S3FileField()),
                (
                    'creator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Groundtruth',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('public', models.BooleanField(default=False)),
                ('data', s3_file_field.fields.S3FileField()),
                (
                    'creator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    'dataset',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='algorithms.dataset'
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ScoreAlgorithm',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                (
                    'data',
                    s3_file_field.fields.S3FileField(
                        validators=[
                            rdoasis.algorithms.models.validators.MimetypeValidator(
                                ['application/x-tar']
                            )
                        ]
                    ),
                ),
                ('docker_image_id', models.TextField(blank=True, null=True)),
                ('docker_attrs', models.TextField(blank=True, null=True)),
                ('docker_validation_failure', models.TextField(blank=True, null=True)),
                (
                    'creator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ScoreJob',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('internal_failure', 'Internal failure'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='queued',
                        max_length=20,
                    ),
                ),
                ('fail_reason', models.TextField(blank=True, null=True)),
                (
                    'algorithm_result',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to='algorithms.algorithmresult',
                    ),
                ),
                (
                    'creator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    'groundtruth',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to='algorithms.groundtruth'
                    ),
                ),
                (
                    'score_algorithm',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to='algorithms.scorealgorithm',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                (
                    'creator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ScoreResult',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('data', s3_file_field.fields.S3FileField()),
                ('log', s3_file_field.fields.S3FileField(blank=True, null=True)),
                (
                    'overall_score',
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(1.0),
                            django.core.validators.MinValueValidator(0.0),
                        ],
                    ),
                ),
                (
                    'result_type',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('simple', 'Direct value'),
                            ('roc', 'Receiver Operating Characteristic'),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    'score_job',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='algorithms.scorejob',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='scorealgorithm',
            name='task',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='algorithms.task'
            ),
        ),
        migrations.AddField(
            model_name='groundtruth',
            name='task',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='algorithms.task'
            ),
        ),
        migrations.AddField(
            model_name='dataset',
            name='tasks',
            field=models.ManyToManyField(to='algorithms.Task'),
        ),
        migrations.AddField(
            model_name='algorithmjob',
            name='dataset',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to='algorithms.dataset'
            ),
        ),
        migrations.AddField(
            model_name='algorithm',
            name='task',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='algorithms.task'
            ),
        ),
        migrations.AlterUniqueTogether(
            name='groundtruth',
            unique_together={('task', 'dataset')},
        ),
    ]
